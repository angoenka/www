<?php


/**
 * This class adds structure of 'tasks' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * 12/13/08 09:34:06
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class TasksMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.TasksMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(TasksPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(TasksPeer::TABLE_NAME);
		$tMap->setPhpName('Tasks');
		$tMap->setClassname('Tasks');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('TASKID', 'Taskid', 'INTEGER', true, 10);

		$tMap->addColumn('SCDIDS', 'Scdids', 'VARCHAR', true, 200);

		$tMap->addColumn('USERID', 'Userid', 'INTEGER', true, 10);

		$tMap->addColumn('TASKPRIORITY', 'Taskpriority', 'INTEGER', true, 10);

		$tMap->addColumn('TASKSTRING', 'Taskstring', 'VARCHAR', true, 200);

		$tMap->addColumn('TASKDESCIPTION', 'Taskdesciption', 'LONGVARCHAR', false, null);

		$tMap->addColumn('DELETED', 'Deleted', 'TINYINT', false, 1);

		$tMap->addColumn('ACTIVE', 'Active', 'TINYINT', true, 1);

	} // doBuild()

} // TasksMapBuilder
